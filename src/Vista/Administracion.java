/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Data.ProductoData;
import static Data.ProductoData.lista;
import Data.Rubro;
import Entidades.Producto;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sutara
 */
public class Administracion extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo= new DefaultTableModel();
     public boolean isCellEditable(int fila,int columna){
    
    return true;
    }
  
    public Administracion() {
     initComponents();
      
        
        cargarEncabezado();
        llenarCombo();
        llenarCombo1();
               desactivarCampos();
       
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboRubro2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDeProductos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        spinStock = new javax.swing.JSpinner();
        txtCodigo = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        comboRubro = new javax.swing.JComboBox<>();
        jBCerrar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel1.setText("Gestion de Producto");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Filtrar por categoria:");

        comboRubro2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRubro2ActionPerformed(evt);
            }
        });

        tablaDeProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        tablaDeProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDeProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaDeProductos);

        jLabel3.setText("Codigo:");

        jLabel4.setText("Descripcion:");

        jLabel5.setText("Precio:");

        jLabel6.setText("Rubro:");

        jLabel7.setText("Stock");

        spinStock.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        comboRubro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboRubroItemStateChanged(evt);
            }
        });

        jBCerrar.setText("Cerrar");
        jBCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCodigo)
                    .addComponent(txtDescripcion)
                    .addComponent(txtPrecio)
                    .addComponent(comboRubro, 0, 163, Short.MAX_VALUE)
                    .addComponent(spinStock, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89)
                .addComponent(jBCerrar)
                .addGap(65, 65, 65))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(spinStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(comboRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7))))
        );

        jButton2.setText("Nuevo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jBEliminar.setText("Eliminar");
        jBEliminar.setEnabled(false);
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(comboRubro2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboRubro2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(btnGuardar)
                    .addComponent(btnActualizar)
                    .addComponent(jBEliminar))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      activaCampos();
      
      btnGuardar.setEnabled(true);
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void comboRubroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboRubroItemStateChanged
           llenarTabla();   
    }//GEN-LAST:event_comboRubroItemStateChanged

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
         
        
         int codigo3;
         
         boolean encontrado=false;
        
        
         String codigo11=txtCodigo.getText();
         
         
        
         
         try{
         
         
         
         codigo3=Integer.parseInt(codigo11);
         
         }catch (NumberFormatException e) {
         
         JOptionPane.showMessageDialog(this, "Ingrese un numero válido");
         
         txtCodigo.requestFocus();
         return;
         
         
        
         
             
         }
         
         
           for (Producto producto1 : ProductoData.lista) {
            
           
                       
            
            if(codigo3==producto1.getCodigo()){
                
                JOptionPane.showMessageDialog(this, "El producto ya existe debe Actualizar sus datos");
               return;
            }
                    
        }
         
         
         
        
         
       
                
        
        String codigo1=txtCodigo.getText().trim();
        
        String descripcion1=txtDescripcion.getText().trim();
        
        String precio1=txtPrecio.getText().trim();
        
        Rubro rubro1=(Rubro)comboRubro.getSelectedItem();
        
        int stock=(Integer)spinStock.getValue();
      
                  
              
        
        String val="[0-9]*";
        
        if(!codigo1.matches(val)){
        
        JOptionPane.showMessageDialog(this, "Debe ingresar solo numeros en el codigo ");
        
        txtCodigo.requestFocus();
        return;
        
        }
        
        
        if(descripcion1.length()==0){
        
        
        JOptionPane.showMessageDialog(this, "La descripcion no puede estar vacia");
        
        txtDescripcion.requestFocus();
        return;
                }
        
        
      double preci;
      
      
      
  
      
      
        
        try{
            
    
        preci=Double.parseDouble(precio1);
        
        
        
        }catch(NumberFormatException nf){
        
        JOptionPane.showMessageDialog(this, " Debe ingresar un precio");
        
        txtPrecio.requestFocus();
        return;
        }
    
        
        
          
       Producto pr2=new Producto();
       
       
       pr2.setCodigo(Integer.parseInt(codigo1));
       pr2.setDescripcion(descripcion1);
       pr2.setPrecio(preci);
       pr2.setRubro(rubro1);
       pr2.setStock(stock);
       
       ProductoData.guardarProducto(pr2);
            
               
        
        limpiarCampos();
        
        desactivarCampos();
       btnGuardar.setEnabled(false);
     
        
       btnActualizar.setEnabled(true);
          
      
       
       
       JOptionPane.showMessageDialog(this,"producto guardado");
        
      
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
     
                 activaCampos();
              
            if (txtCodigo.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Debe ingresar el código del producto a actualizar.");
         txtCodigo.requestFocus();
            return;
    }

    try {
     
        int codigo = Integer.parseInt(txtCodigo.getText().trim());
        String descripcion = txtDescripcion.getText().trim();
        double precio = Double.parseDouble(txtPrecio.getText().trim());
        Rubro rubro = (Rubro) comboRubro.getSelectedItem();
        int stock = (Integer) spinStock.getValue();

        
            if (descripcion.isEmpty()) {
            JOptionPane.showMessageDialog(this, "La descripción no puede estar vacía.");
            txtDescripcion.requestFocus();
                 return;
        }

        
        Producto productoOriginal = new Producto();
        productoOriginal.setCodigo(codigo);

        // Verificar si el producto existe antes de intentar actualizarlo
        if (ProductoData.lista.contains(productoOriginal)) {
            // Borrar el producto original
            ProductoData.borrarProducto(productoOriginal);
            
            // Crear el nuevo objeto con los datos actualizados
            Producto productoActualizado = new Producto(codigo, descripcion, precio, rubro, stock);
            
            
            ProductoData.guardarProducto(productoActualizado);
            
            JOptionPane.showMessageDialog(this, " Producto actualizado con éxito.");
            
            
            limpiarCampos();
            desactivarCampos();
            btnActualizar.setEnabled(false);

            // Recargar la tabla para mostrar los cambios
            llenarTabla();
            
        } else {
            // El producto no fue encontrado, no se puede actualizar
            JOptionPane.showMessageDialog(this, "El producto con el código " + codigo + " no existe.");
        }
    } catch (NumberFormatException nf) {
        
        JOptionPane.showMessageDialog(this, "Error de formato: Asegúrese de que el código y el precio sean números válidos.");
        txtCodigo.requestFocus();
    }
           
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void jBCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCerrarActionPerformed
     dispose();
    }//GEN-LAST:event_jBCerrarActionPerformed

    private void comboRubro2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRubro2ActionPerformed
     llenarTabla();       
    }//GEN-LAST:event_comboRubro2ActionPerformed

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed




int fila=tablaDeProductos.getSelectedRow();
        
        if (fila!=-1){
            modelo.removeRow(fila);
        
        
        } else{
        
        JOptionPane.showMessageDialog(this, "Debe seleccionar una fila");
        }



        
        
        
        
      
    }//GEN-LAST:event_jBEliminarActionPerformed

    private void tablaDeProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDeProductosMouseClicked
    int filaSeleccionada= tablaDeProductos.getSelectedRow();
    
    /*if (filaSeleccionada!=-1){
        int codigo= (int) tablaDeProductos.getValueAt(filaSeleccionada, 0);
        String descripcion = (String)tablaDeProductos.getValueAt(filaSeleccionada, 1);
       double precio =(double) tablaDeProductos.getValueAt(filaSeleccionada, 2);
        Rubro rubro = (Rubro) tablaDeProductos.getValueAt(filaSeleccionada, 3);
        int Stock = (int)tablaDeProductos.getValueAt(filaSeleccionada, 4);
        
        txtCodigo.setText(codigo +"");
        txtDescripcion.setText(descripcion);
        //txtPrecio.setText(precio+"");
        comboRubro.setSelectedItem(rubro);
        spinStock.setValue(Stock);
    
    }*/
    jBEliminar.setEnabled(true);
    btnActualizar.setEnabled(true);
    }//GEN-LAST:event_tablaDeProductosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<Rubro> comboRubro;
    private javax.swing.JComboBox<Rubro> comboRubro2;
    private javax.swing.JButton jBCerrar;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JSpinner spinStock;
    private javax.swing.JTable tablaDeProductos;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables


public void cargarEncabezado(){
  ArrayList<Object> lista = new ArrayList();
   lista.add("Codigo");
   lista.add("Descripcion");
   lista.add("Precio");
   lista.add("Categoria");
   lista.add("Stock");
    for (Object aux : lista) {
        modelo.addColumn(aux);
    }
   tablaDeProductos.setModel(modelo);
}

public void llenarTabla(){
    borrarFilas();
   Rubro categoria = (Rubro) comboRubro2.getSelectedItem();
    
   for (Producto aux : ProductoData.lista) {
       
    if(aux.getRubro()==categoria){
     modelo.addRow(new Object[]{aux.getCodigo(),aux.getDescripcion(),aux.getRubro(),aux.getPrecio(),aux.getStock()});
       }
    }
   
}

    private void borrarFilas(){
     int numFilas= modelo.getRowCount() -1;
     for (int i = numFilas; i >= 0; i--) {
         modelo.removeRow( i );
         
     }
    }

    private void llenarCombo(){
         
    comboRubro2.addItem(Rubro.COMESTIBLE);
    comboRubro2.addItem(Rubro.PERFUMERIA);
    comboRubro2.addItem(Rubro.LIMPIEZA );
    
    }
    // para llenar el combo dos 
    private void llenarCombo1(){
    comboRubro.addItem(Rubro.COMESTIBLE);
    comboRubro.addItem(Rubro.PERFUMERIA);
    comboRubro.addItem(Rubro.LIMPIEZA);
    }
    
    
    
    private void limpiarCampos(){
        
            
            txtCodigo.setText("");
      txtDescripcion.setText("");
      txtPrecio.setText("");
      comboRubro.setSelectedIndex(0);
      spinStock.setValue(0); 
      
            
      
      
              }
    
    
    
     private void activaCampos(){
      
      txtCodigo.setEnabled(true);
      txtDescripcion.setEnabled(true);
      txtPrecio.setEnabled(true);
      comboRubro.setEnabled(true);
      spinStock.setEnabled(true);
      
      
      }
      
      private void desactivarCampos(){
           
           
      
      txtCodigo.setEnabled(false);
      txtDescripcion.setEnabled(false);
      txtPrecio.setEnabled(false);
      comboRubro.setEnabled(false);
      spinStock.setEnabled(false);
      
      
      }
     
     

    
  
    
}
